[{"/Users/ta93n/fullstackopen/part2/src/index.js":"1","/Users/ta93n/fullstackopen/part2/src/components/Note.js":"2","/Users/ta93n/fullstackopen/part2/src/App.js":"3","/Users/ta93n/fullstackopen/part2/src/services/notes.js":"4"},{"size":168,"mtime":1612867616747,"results":"5","hashOfConfig":"6"},{"size":353,"mtime":1612947194177,"results":"7","hashOfConfig":"6"},{"size":3730,"mtime":1612951668794,"results":"8","hashOfConfig":"6"},{"size":810,"mtime":1612950915004,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1m1r0co",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/ta93n/fullstackopen/part2/src/index.js",["20"],"/Users/ta93n/fullstackopen/part2/src/components/Note.js",[],["21","22"],"/Users/ta93n/fullstackopen/part2/src/App.js",["23"],"/Users/ta93n/fullstackopen/part2/src/services/notes.js",["24"],"import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/notes'\n\n/*\nAxiosのメソッドgetはPromiseを返します。\nPromiseとはJavaScriptにおいて、非同期処理の操作が完了したときに結果を返すものです。\n*/\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const = request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }\n\n/*\n上記エクスポートは下記の簡略化ver\nexport default {\n  getAll: getAll,\n  create: create,\n  update: update\n}\n*/\n",{"ruleId":"25","severity":1,"message":"26","line":3,"column":8,"nodeType":"27","messageId":"28","endLine":3,"endColumn":13},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"25","severity":1,"message":"26","line":2,"column":8,"nodeType":"27","messageId":"28","endLine":2,"endColumn":13},{"ruleId":null,"fatal":true,"severity":2,"message":"33","line":14,"column":9},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-native-reassign",["34"],"no-negated-in-lhs",["35"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 12 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m \u001b[36mconst\u001b[39m create \u001b[33m=\u001b[39m newObject \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 |\u001b[39m   \u001b[36mconst\u001b[39m \u001b[33m=\u001b[39m request \u001b[33m=\u001b[39m axios\u001b[33m.\u001b[39mpost(baseUrl\u001b[33m,\u001b[39m newObject)\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 |\u001b[39m   \u001b[36mreturn\u001b[39m request\u001b[33m.\u001b[39mthen(response \u001b[33m=>\u001b[39m response\u001b[33m.\u001b[39mdata)\u001b[0m\n\u001b[0m \u001b[90m 16 |\u001b[39m }\u001b[0m\n\u001b[0m \u001b[90m 17 |\u001b[39m\u001b[0m","no-global-assign","no-unsafe-negation"]